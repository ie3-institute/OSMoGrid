@startuml
'https://plantuml.com/sequence-diagram

!theme plain
autonumber

boundary Main
database Input
participant InputDataProvider
participant OsmoGridGuardian
participant LvCoordinator
collections LvRegionCoordinator
collections LvGridGenerator
participant ResultListener

== Init ==
Main -> OsmoGridGuardian: Run(cfg)
OsmoGridGuardian --> InputDataProvider: //Spawn//

OsmoGridGuardian --> ResultListener: //Spawn//
note right: Death watch of\n""ResultListener""

== LV generation ==
OsmoGridGuardian --> LvCoordinator: //Spawn//
OsmoGridGuardian -> LvCoordinator: !ReqLvGrids(...)
LvCoordinator -> InputDataProvider: !ReqOsm(...)
InputDataProvider <--> Input: //Read//
LvCoordinator -> InputDataProvider: !ReqAssetTypes(...)
InputDataProvider <--> Input: //Read//
InputDataProvider -> LvCoordinator: !RepOsm(...)
InputDataProvider -> LvCoordinator: !RepAssetTypes(...)
activate LvCoordinator
note right: Partition OSM data\nby municipal boundaries
LvCoordinator --> LvGridGenerator: //Spawn worker pool//
LvCoordinator --> LvRegionCoordinator: //Spawn worker pool//

LvCoordinator -> LvRegionCoordinator: !ReqLvGrids(...)
deactivate LvCoordinator
LvRegionCoordinator -> LvGridGenerator: !ReqLvGrid(...)
activate LvGridGenerator
... ...
LvGridGenerator -> LvRegionCoordinator: !PepLvGrid(...)
deactivate LvGridGenerator

LvRegionCoordinator -> LvCoordinator: !RepLvGrids(...)
LvCoordinator -> OsmoGridGuardian: !RepLvGrids(...)

== MV generation ==
... **To be defined in a later stage** ...

== Result handling ==
OsmoGridGuardian -> ResultListener: !GridResult(...)
activate ResultListener
... ...
ResultListener -> OsmoGridGuardian: !ResultListenerDied
deactivate ResultListener
OsmoGridGuardian -> InputDataProvider: !Terminate(...)
InputDataProvider <--> Input: //Close//
InputDataProvider -> OsmoGridGuardian: !InputDataProviderDied

OsmoGridGuardian -> Main: !Done

'TODO: Don't forget to spawn and initialize the ResultListener

@enduml
