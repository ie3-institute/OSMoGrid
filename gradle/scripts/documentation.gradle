def docBaseDirPath = project.projectDir.toString() + File.separator + project.docsDirName.toString() + File.separator

/*
 * Additional tasks, that are defined by default:
 *   - sphinx -> Generate HTML output of *.rst files in <projectDir>/docs/readthedocs
 */

/**
 * Configuring the sphinx plugin
 */
sphinx {
  description 'Generate high level HTML documentation output.'
  group 'Documentation'

  sourceDirectory = "${docBaseDirPath}/readthedocs"
  outputDirectory = layout.buildDirectory.dir("/docs/readthedocs")
}

/**
 * Task to generate the JavaDoc
 */
javadoc() {
  description 'Generates java API doc at the correct place.'
  group 'Documentation'

  source = sourceSets.main.allJava
  destinationDir = file( docBaseDirPath + 'javadoc' )
  classpath = project.sourceSets.main.compileClasspath
}

/**
 * Converts the PlantUML diagrams to a png file, so that those can be used in sphinx documentation
 *
 * Important note: you have to install GraphViz Manually before being able to execute this task! -> https://graphviz.org
 */
task puml2png() {
  description 'Converts plantUML diagrams to png files.'
  group 'Documentation'

  doLast {
    /* Get the PlantUML-jar or download it, if it is not available */
    def pumlJarFile = layout.buildDirectory.file("plantuml.jar").get().asFile
    if (!pumlJarFile.exists() || !pumlJarFile.isFile()) {
      download.run {
        src 'https://downloads.sourceforge.net/project/plantuml/plantuml.jar'
        dest layout.buildDirectory.get()
      }
    }
    javaexec {
      main = "-jar"
      args = [
        "build/plantuml.jar",
        "-psvg",
        "-o",
        "${docBaseDirPath}readthedocs/_static/figures/puml/",
        "${docBaseDirPath}puml/**/*.puml"
      ]
    }
  }
}

/**
 * Converts the PlantUML diagrams to a svg file, so that those can be used in sphinx documentation
 *
 * Important note: you have to install GraphViz Manually before being able to execute this task! -> https://graphviz.org
 */
task puml2svg() {
  description 'Converts plantUML diagrams to svg files.'
  group 'Documentation'

  doLast {
    /* Get the PlantUML-jar or download it, if it is not available */
    def pumlJarFile = layout.buildDirectory.file("plantuml.jar").get().asFile
    if (!pumlJarFile.exists() || !pumlJarFile.isFile()) {
      download.run {
        src 'https://downloads.sourceforge.net/project/plantuml/plantuml.jar'
        dest layout.buildDirectory.get()
      }
    }
    javaexec {
      main = "-jar"
      args = [
        "build/plantuml.jar",
        "-svg",
        "-o",
        "${docBaseDirPath}readthedocs/_static/figures/puml/",
        "${docBaseDirPath}puml/**/*.puml"
      ]
    }
  }
}
